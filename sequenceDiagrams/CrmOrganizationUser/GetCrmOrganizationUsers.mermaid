sequenceDiagram
  title Get CrmOrganizationUsers
    participant ui as SalesSparrow Client
    participant api as SalesSparrow API
    participant exceptionHandler as Global Exception Handler
    participant validator as Param Validator(Interceptor)
    participant controller as CrmOrganizationUser Controller
    participant service as GetCrmOrganizationUserList Service
    participant factory as GetCrmOrganizationUserList Factory
    participant crm as Salesforce GetCrmOrganizationUserList Service
    participant CompositeRequestWrapper as CompositeRequest(Wrapper)
    participant salesforce as Salesforce

    ui->>api:  Send request 
    note right of ui: Request: POST {api_base_url}/v1/crm-organization-users<br><br>Query params: <br>q [optional] <br>(Search CrmOrganizationUsers string)

    note over api: Validate and fetch current user data from cookie<br>set current_user attribute in request.<br><br>Refer this document for interceptor sequence diagram <br> './docs/sequenceDiagrams/Common/UserAuthIntercepter.mermaid'
    break If currentUser not found
        api-->>ui: Return 401 Error Response<br>current_user Not Found
    end

    api->>validator: Validate query params

    break 
        alt If mandatory params not present in the body
            validator->>exceptionHandler: Throws exeption
            exceptionHandler-->>ui:Return 400 error response 
        else If query character length > 200
            validator->>exceptionHandler: Throws exeption
            exceptionHandler-->>ui:Return 400 error response
        end
    end

    validator->>controller: Send validated params<br>params: q
    
    controller->>service: Call getCrmOrganizationUserList method of GetCrmOrganizationUserListService<br> params: request, q
    note over service: GetAttribute of current_user from request<br>Which was set by interceptor

    service->>factory: Call getCrmOrganizationUserList method of GetCrmOrganizationUserListFactory<br>params: currentUser, q
    note over factory: Based on currentUser identify CRM

    factory->>crm: Call getCrmOrganizationUserList method of particular CRM service<br>params: currentUser, q

    note over crm: fetch salesforceUserId from request currentUser
    break If salesforceUserId is not present in currentUser.
        crm->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui:Return 400 error response 
    end

    note over crm: Escape special characters for q (query string)
    note over crm: Url Encode the salesforce query string

    crm->>CompositeRequestWrapper: Send compositeBody to make request to salesforce<br>params: <br> List<requestType, url, referenceId>, salesforceUserId <br>

    CompositeRequestWrapper->>salesforce: Make salesforce composite api call with commmon helper function<br><br>Refer this document for commmon helper function sequence diagram <br> './docs/sequenceDiagrams/Common/OAuthRequestHelper.mermaid'
    note right of CompositeRequestWrapper: Request: POST {instance_url}/services/data/v58.0/composite <br><br>Params: <br> requestType: GET<br> url: "/services/data/v58.0/query/?q=<br>SELECT Id, Name FROM User WHERE Name LIKE '%@{q}%' AND IsActive = true<br> ORDER BY LastModifiedDate DESC LIMIT 20"<br>referenceId: "getCrmOrganizationUsers"<br>
    
    break If any error from salesforce
        salesforce-->>CompositeRequestWrapper: Error
        CompositeRequestWrapper->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui: Return 400 error response
    end

    salesforce-->>CompositeRequestWrapper: Response
    CompositeRequestWrapper-->>crm: Response
    note over crm:  Format Salesforce Response into<br> GetCrmOrganizationUsersFormatterDto<br>{<br>crm_organization_user_ids:List<String>,<br>crm_organization_user_map_by_id:CrmOrganizationUserEntity<br>}

    crm-->>factory: Response:<br>GetCrmOrganizationUsersFormatterDto
    factory-->>service: Response:<br>GetCrmOrganizationUsersFormatterDto
    service-->> controller: Response:<br>GetCrmOrganizationUsersFormatterDto
    controller-->>api: Response:<br>GetCrmOrganizationUsersFormatterDto
    note right of api: {<br>crm_organization_user_ids:[],<br> crm_organization_user_map_by_id: {}<br>}

    api-->>ui: Success:200
    note right of ui: Response body: <br> {<br>crm_organization_user_ids:[],<br> crm_organization_user_map_by_id: {}<br>}<br><br>Response headers:<br> cookie 