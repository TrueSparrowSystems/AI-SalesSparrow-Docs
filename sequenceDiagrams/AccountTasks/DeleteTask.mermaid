sequenceDiagram
  title Delete Account Task
    participant ui as SalesSparrow Client
    participant api as SalesSparrow API
    participant exceptionHandler as Global Exception Handler
    participant validator as Param Validator(Interceptor)
    participant controller as AccountTask Controller
    participant service as DeleteAccountTask Service
    participant factory as DeleteAccountTask Factory
    participant crm as Salesforce DeleteAccountTask Service
    participant CompositeRequestWrapper as CompositeRequest(Wrapper)
    participant salesforce as Salesforce

    ui->>api:  Send request 
    note right of ui: Request: <br>DELETE {api_base_url}/v1/accounts/{account_id}/tasks/{task_id}<br><br>path params:  <br>account_id [mandatory]<br>task_id [mandatory]


    note over api: Validate and fetch current user data from cookie<br>set currentUser attribute in request.<br><br>Refer this document for interceptor sequence diagram <br> './docs/sequenceDiagrams/Common/UserAuthIntercepter.mermaid'
    break If currentUser not found
        api-->>ui: Return 401 Error Response<br>currentUser Not Found
    end

    api->>validator: Validate path params

    break 
        alt If mandatory params not present in the body
            validator->>exceptionHandler: Throws exeption
            exceptionHandler-->>ui:Return 400 error response 
        else If account_id or task_id is not valid
            validator->>exceptionHandler: Throws exeption
            exceptionHandler-->>ui:Return 400 error response 
        end
    end

    validator->>controller: Send validated params<br>params: taskId, accountId
    
    controller->>service: Call deleteAccountTask method of DeleteAccountTaskService<br> params: request, taskId, accountId
    note over service: GetAttribute of currentUser from request<br>Which was set by interceptor

    service->>factory: Call deleteAccountTask method of DeleteAccountTaskFactory<br>params: currentUser, taskId
    note over factory: Based on currentUser identify CRM

    factory->>crm: Call deleteAccountTask method of particular CRM service<br>params: currentUser, taskId

    note over crm: fetch salesforceUserId from request currentUser
    break If salesforceUserId is not present in currentUser.
        crm->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui:Return 400 error response 
    end
    crm->>CompositeRequestWrapper: Send compositeBody to make request to salesforce<br>params: <br> List<requestType, url, referenceId>, salesforceUserId <br>

    CompositeRequestWrapper->>salesforce: Make salesforce composite api call with commmon helper function<br><br>Refer this document for commmon helper function sequence diagram <br> './docs/sequenceDiagrams/Common/OAuthRequestHelper.mermaid'
    note right of CompositeRequestWrapper: Request: POST {instance_url}/services/data/v58.0/composite <br><br>Params: <br> method: DELETE<br> url: "/services/data/v58.0/sobjects/ContentNote/${taskId}"<br>referenceId: "DeleteAccountTask"
    
    break If any error from salesforce
        salesforce-->>CompositeRequestWrapper: Error
        CompositeRequestWrapper->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui: Return 400 error response
    end

    salesforce-->>CompositeRequestWrapper: Response
    CompositeRequestWrapper-->>crm: Response

    crm-->>factory: Response
    factory-->>service: Response
    service-->> controller: Response
    controller-->>api: Response

    api-->>ui: Success:204
    note right of ui: Response body: <br> {}<br><br>Response headers:<br> cookie 