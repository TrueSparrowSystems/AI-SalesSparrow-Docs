sequenceDiagram
  title Get Note Details
    participant ui as SalesSparrow Client
    participant api as SalesSparrow API
    participant exceptionHandler as Global Exception Handler
    participant validator as Param Validator(Interceptor)
    participant controller as Account Controller
    participant service as GetNoteDetails Service
    participant factory as GetNoteDetails Factory
    participant crm as Salesforce GetNoteDetails Service
    participant helper as CompositeRequest Helper 
    participant salesforce as Salesforce
    participant formatter as GetNoteDetails Formmatter

    ui->>api:  Send request 
    note right of ui: Request: <br>GET {api_base_url}/accounts/{account_id}/notes/{note_id}<br><br>path params:  <br>note_id (NoteId to fecth details of note)<br>account_id 

    note over api: Validate and fetch current user data from cookie<br>set current_user attribute in request.<br><br>Refer this document for interceptor sequence diagram <br> './docs/sequenceDiagrams/UserAuthIntercepter.mermaid'
    break If current_user not found
        api-->>ui: Error Response<br>current_user Not Found
    end

    api->>validator: Validate path params

    break If mandatory params not present in the body
        validator->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui:Return error response 
    end

    validator->>controller: Send validated params<br>params: noteId
    
    controller->>service: Call getNoteDetails method of GetNoteDetailsService<br> params: request, noteId
    note over service: GetAttribute of current_user from request<br>Which was set by interceptor

    service->>factory: Call getNoteDetails method of GetNoteDetailsFactory<br>params: current_user, noteId
    note over factory: Based on current_user identify CRM

    factory->>crm: Call getNoteDetails method of particular CRM service<br>params: current_user, noteId

    note over crm: fetch salesforceUserId from request<br> which was set by interceptor
    break If salesforceUserId is not present in current_user.
        crm->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui:Return error response 
    end
    crm->>helper: Send compositeBody to make request to salesforce<br>params: <br> List<requestType, url, referenceId>, salesforceUserId <br>

    helper->>salesforce: Make salesforce composite api call with commmon helper function<br><br>Refer this document for commmon helper function sequence diagram <br> './docs/sequenceDiagrams/CommonRequestHelper.mermaid'
    note right of helper: Request: POST {instance_url}/services/data/v58.0/composite <br><br>Params: <br> requestType: GET<br> url: "/services/data/v58.0/query/?q=<br>SELECT Id, Title, TextPreview, ContentModifiedDate , CreatedBy.Name FROM ContentNote <br>WHERE Id = note_id<br>referenceId: "GetContentNotes"<br>
    
    break If any error from salesforce
        salesforce-->>helper: Error
        helper->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui: Return error response
    end

    salesforce-->>helper: Response
    helper-->>crm: Response

    crm->>salesforce: Make salesforce api call for Content
    note right of crm: Request: POST {instance_url}/services/data/v58.0/sobjects/ContentNote/{{note_id}} 

    break If any error from salesforce
        salesforce-->>crm: Error
        crm->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui: Return error response
    end

    salesforce-->>crm: Response

    crm->>formatter: Format Response into GetNoteDetailsFormatterDto<br>Params: noteDetailsResponse, noteContentResponse
    break If any error occur in formatter
        formatter->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui: Return error response
    end
    formatter-->>crm: GetNoteDetailsFormatterDto Response
    crm-->>factory: Response
    factory-->>service: Response
    service-->> controller: Response
    controller-->>api: Response
    note right of api: {note_details: {}}

    api-->>ui: Success:200
    note right of ui: Response body: <br> note_details<br><br>Response headers:<br> cookie 