sequenceDiagram
  title Create Note
    participant ui as SalesSparrow Client
    participant api as SalesSparrow API
    participant exceptionHandler as Global Exception Handler
    participant validator as Param Validator(Interceptor)
    participant controller as Account Controller
    participant service as CreateNote Service
    participant factory as CreateNote Factory
    participant crm as Salesforce CreateNote Service
    participant CompositeRequestWrapper as CompositeRequest(Wrapper)
    participant salesforce as Salesforce

    ui->>api:  Send request 
    note right of ui: Request: Request: <br>POST {api_base_url}/v1/accounts/{account_id}/note<br><br>query params:  <br>account_id (Account Id for attaching note) <br><br> request body:<br>text (Content of Note)

    note over api: Validate and fetch current user data from cookie<br>set current_user attribute in request.<br><br>Refer this document for interceptor sequence diagram <br> './docs/sequenceDiagrams/Common/UserAuthIntercepter.mermaid'
    break If current_user not found
        api-->>ui: Error Response<br>current_user Not Found
    end

    api->>validator: Validate path and body params

    break If mandatory params not present in the body
        validator->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui:Return error response 
    end

    validator->>controller: Send validated params<br>params: text, accountId
    
    controller->>service: Call createNote method of CreateNoteService<br> params: request, text, accountId
    note over service: GetAttribute of current_user from request<br>Which was set by interceptor

    service->>factory: Call createNote method of CreateNoteFactory<br>params: currentUser, text, accountId
    note over factory: Based on currentUser identify CRM

    factory->>crm: Call createNote method of particular CRM service<br>params: currentUser, text, accountId

    note over crm: fetch salesforceUserId from request currentUser
    break If salesforceUserId is not present in currentUser.
        crm->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui:Return error response 
    end
    crm->>CompositeRequestWrapper: Send compositeBody to make request to salesforce<br>params: <br> List<requestType, url, referenceId>, salesforceUserId <br>

    CompositeRequestWrapper->>salesforce: Make salesforce composite api call with commmon helper function<br><br>Refer this document for commmon helper function sequence diagram <br> './docs/sequenceDiagrams/Common/OAuthRequestHelper.mermaid'
    note right of CompositeRequestWrapper: Request: POST {instance_url}/services/data/v58.0/composite <br><br>Params: <br> requestType: POST<br> url: "/services/data/v58.0/sobjects/ContentNote/"<br>body: {Content: "Base64 of content Text", Title: "Title of Note"} <br>referenceId: "CreateNote"<br><br> requestType: POST<br> url: "/services/data/v58.0/sobjects/ContentDocumentLink/"<br>body: {ContentDocumentId:"@{createNote.id}", <br>LinkedEntityId:"0011e00000bWSxdAAG"} <br>referenceId: "AttachNote"<br>
    
    break If any error from salesforce
        salesforce-->>CompositeRequestWrapper: Error
        CompositeRequestWrapper->>exceptionHandler: Throws exeption
        exceptionHandler-->>ui: Return error response
    end

    salesforce-->>CompositeRequestWrapper: Response
    CompositeRequestWrapper-->>crm: Response

    note over crm: Format Salesforce Response into<br> CreateNoteDto<br>{note_id:String}

    crm-->>factory: Response:<br>CreateNoteDto
    factory-->>service: Response:<br>CreateNoteDto
    service-->> controller: Response:<br>CreateNoteDto
    controller-->>api: Response:<br>CreateNoteDto
    note right of api: {note_id: ""}

    api-->>ui: Success:200
    note right of ui: Response body: <br> {note_id:""}<br><br>Response headers:<br> cookie 